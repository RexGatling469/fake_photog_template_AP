.nav {
    overflow: hidden;
    background-color: brown;
}

.nav a {
    float: left;
    display: block;
    color:white;
    text-align: center;
    padding: 10px 35px;
    text-decoration: none;
    font-size:16px;
}

.nav a:hover{
    background-color: lightblue;
    color: brown;
}

.nav .icon {
    display: none;
}

@media screen and (max-width: 600px) {
    .nav a:not(first-child) {display: none;}
    .nav a.icon{
        float: right;
        display: block;
    }
}
@media screen and (max-width: 600px) {
    .nav.responsive {position: relative;}
    .nav.responsive .icon {
      position: absolute;
      right: 0;
      top: 0;
    }
    .nav.responsive a {
      float: none;
      display: block;
      text-align: left;
    }
  }

  .maintitle{
      background-color:lightblue;
    
  }

  .maintitle h1 {
      padding: 10px 10px;
      margin-left:12px;
      color:goldenrod;
      font-family: 'Dancing Script', cursive;
      font-size: 45px;

  }

/*---------Slide Show Style------------------------------*/
* {
    box-sizing: border-box;
}
.fakeSlide {
    display: none
}
img {
    vertical.-align: middle;
    height: 375px;
    width:auto;
}

/* Slideshow container */
.slideshow_inside {
    width: 100%;
    position: relative;
    margin: auto;
}

/* Next & previous buttons */
.prev, .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    width: auto;
    padding: 16px;
    margin-top: -22px;
    color: white;
    font-weight: bold;
    font-size: 18px;
    transition: 0.6s ease;
    border-radius: 0 3px 3px 0;
    user-select: none;
  }

  /* The dots/bullets/indicators */
.dot {
    cursor: pointer;
    height: 10px;
    width: 10px;
    margin: 0 2px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.6s ease;
  }

  .active, .dot:hover {
    background-color: #717171;
  }

  /* Position the "next button" to the right */
.next {
    right: 0;
    border-radius: 3px 0 0 3px;
  }
  
  /* On hover, black background color with a little bit see-through */
  .prev:hover, .next:hover {
    background-color: #bbb;
  }

/* Fading animation */
.fade {
    -webkit-animation-name: fade;
    -webkit-animation-duration: 1.0s;
    animation-name: fade;
    animation-duration: 1.0s;
  }
  
  @-webkit-keyframes fade {
    from {opacity: .4} 
    to {opacity: 1}
  }
  
  @keyframes fade {
    from {opacity: .4} 
    to {opacity: 1}
  }
  

/*----Artist Bio Section------*/

.fullBio_section {
    display:flex;
    flex-wrap: wrap;
    padding: 60px;
    width: 100%;    
    justify-content: center;


}

.BioPic img {
  display: flex;
  flex-wrap: wrap;
  width: 350px;
  height: 255px;
  margin-right: 20px;

}

.BioText {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  max-width: 550px;
  padding-left: 50px;
}

















/*---PORTFOLIO STYLES flexbox Gallery---*/
* {
  box-sizing: border-box;
}


.row_fake {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;

}

.column_fake {
  display:flex;
  flex-wrap:wrap;
  width:33%;
  padding:6px;
}

/* Responsive layout - makes a two column-layout instead of four columns */
@media screen and (max-width: 900px) {
  .column_fake {
    -ms-flex: 50%;
    flex: 50%;
    max-width: 50%;
  }
}

/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  .column_fake {
    -ms-flex: 100%;
    flex: 100%;
    max-width: 100%;
  }
}


.theFoot {
  background-color: black;
  height: 65px;
  width: 100%;
  display: flex;
  justify-content: space-around;
  width: 100%;
  padding: 5px;
 
}

.footLogo img{
  width: 85px;
  height: 60px;

 
}
 .address, .socialIcons {
  font-size: 12px;
  color: white;
  display: flex;



}

.Bootstuff {
  display: flex;
  flex-wrap: wrap;
  width:100%;
  flex-direction: row;
  margin: 20px;
  justify-content: center;
}

.card {
  margin: 33px;
}




















  /*Owl Styles
.wrapper {
    width:100%;
    height: auto;
    overflow:hidden;
}

responsive : {
    // breakpoint from 0 up
    0 : {
        option1 : value,
        option2 : value,
        ...
    },
    // breakpoint from 480 up
    480 : {
        option1 : value,
        option2 : value,
        ...
    },
    // breakpoint from 768 up
    768 : {
        option1 : value,
        option2 : value,
        ...
    }
}*/